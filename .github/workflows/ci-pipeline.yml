name: CI Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restaurar dependências
        run: dotnet restore

      - name: Compilar todos os projetos
        run: dotnet build --configuration Debug --no-restore

  unit_tests:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restaurar dependências
        run: dotnet restore

      - name: Compilar testes unitários
        run: dotnet build --configuration Debug --no-restore

      - name: Executar testes unitários
        run: |
          dotnet test TechChallenge.Application.UnitTests/TechChallenge.Application.UnitTests.csproj --configuration Debug --no-build --verbosity normal
          dotnet test TechChallenge.Domain.UnitTests/TechChallenge.Domain.UnitTests.csproj --configuration Debug --no-build --verbosity normal
          dotnet test TechChallenge.Infrastructure.UnitTests/TechChallenge.Infrastructure.UnitTests.csproj --configuration Debug --no-build --verbosity normal

  integration_tests:
    runs-on: ubuntu-latest
    needs: build

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          SA_PASSWORD: "NovaSenhaForte123"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: >-
          --health-cmd "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P NovaSenhaForte123 -Q 'SELECT 1'"
          --health-interval 10s
          --health-timeout 15s
          --health-retries 40
          --user root  
          --memory=4g  

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restaurar dependências
        run: dotnet restore

      - name: Compilar testes de integração
        run: dotnet build --configuration Debug --no-restore

      - name: Exibir uso de memória e CPU antes do SQL Server iniciar
        run: |
          echo "🔍 Monitorando uso de memória e CPU..."
          free -m
          df -h
          top -n 1 -b | head -20

      - name: Aguardar SQL Server estar pronto
        run: |
          echo "Aguardando SQL Server iniciar..."
          for i in {1..30}; do
            docker logs $(docker ps -a -q --filter "name=sqlserver") | tail -n 20
            nc -zv localhost 1433 && echo "✅ SQL Server está pronto!" && exit 0
            echo " SQL Server ainda iniciando... Tentativa $i de 30"
            sleep 5
          done
          echo " ERRO: SQL Server não inicializou a tempo"
          exit 1

      - name: Criar banco de dados antes dos testes
        run: |
          echo " Criando banco de dados 'Contacts'..."
          /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P NovaSenhaForte123 -Q "CREATE DATABASE Contacts;"

      - name: Executar testes de integração
        env:
          ConnectionStrings__ConexaoPadrao: "Server=localhost,1433; Database=Contacts; User Id=sa; Password=NovaSenhaForte123; TrustServerCertificate=True"
        run: dotnet test TechChallenge.Application.IntegrationTests/TechChallenge.Application.IntegrationTests.csproj --configuration Debug --no-build --verbosity normal

  docker_build_push:
    runs-on: ubuntu-latest
    needs: [unit_tests, integration_tests]

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Autenticar no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Construir e enviar imagens Docker
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/techchallenge-contatos:latest -f Contatos/Dockerfile .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/techchallenge-contatos:latest
          
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/techchallenge-consulta:latest -f Consulta/Dockerfile .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/techchallenge-consulta:latest
          
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/techchallenge-atualizacao:latest -f Atualizacao/Dockerfile .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/techchallenge-atualizacao:latest
          
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/techchallenge-exclusao:latest -f Exclusao/Dockerfile .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/techchallenge-exclusao:latest
          
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/techchallenge-persistencia:latest -f Persistencia/Dockerfile .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/techchallenge-persistencia:latest
