name: CI Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restaurar dependências
        run: dotnet restore

      - name: Compilar todos os projetos
        run: dotnet build --configuration Debug --no-restore

  unit_tests:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restaurar dependências
        run: dotnet restore

      - name: Compilar testes unitários
        run: dotnet build --configuration Debug --no-restore

      - name: Executar testes unitários
        run: |
          dotnet test TechChallenge.Application.UnitTests/TechChallenge.Application.UnitTests.csproj --configuration Debug --no-build --verbosity normal
          dotnet test TechChallenge.Domain.UnitTests/TechChallenge.Domain.UnitTests.csproj --configuration Debug --no-build --verbosity normal
          dotnet test TechChallenge.Infrastructure.UnitTests/TechChallenge.Infrastructure.UnitTests.csproj --configuration Debug --no-build --verbosity normal

  integration_tests:
    runs-on: ubuntu-latest
    needs: build

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          SA_PASSWORD: "NovaSenhaForte123"
          ACCEPT_EULA: "Y"
          MSSQL_PID: "Developer"
          MSSQL_MEMORY_LIMIT_MB: "2048"
          MSSQL_AGENT_ENABLED: "True"
        ports:
          - 1433:1433
        options: >-
          --memory="2g"
          --cpus="2"

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restaurar dependências
        run: dotnet restore

      - name: Instalar SQLCMD e verificar conectividade
        run: |
          sudo apt-get update
          sudo apt-get install -y curl apt-transport-https
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          sudo add-apt-repository "$(curl -s https://packages.microsoft.com/config/ubuntu/20.04/prod.list)"
          sudo apt-get update
          sudo apt-get install -y mssql-tools unixodbc-dev telnet
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
          export PATH="$PATH:/opt/mssql-tools/bin"
          which sqlcmd
          nslookup sqlserver || echo "Erro: DNS não conseguiu resolver sqlserver"
          echo "Verificando conectividade com o SQL Server..."
          for i in {1..10}; do
            telnet localhost 1433 && echo "Conexão com porta 1433 estabelecida!" && exit 0
            echo "Tentativa $i de 10 para conectar ao SQL Server via telnet"
            sleep 5
          done
          echo "Erro: SQL Server não está acessível via telnet"
          exit 1

      - name: Compilar testes de integração
        run: dotnet build --configuration Debug --no-restore

      - name: Aguardar SQL Server iniciar
        run: |
          echo "Aguardando SQL Server iniciar..."
          sleep 90
          for i in {1..20}; do
            /opt/mssql-tools/bin/sqlcmd -S localhost,1433 -U sa -P NovaSenhaForte123 -Q "SELECT 1" && echo "SQL Server está pronto!" && exit 0
            echo "SQL Server ainda não está pronto... Tentativa $i de 20"
            sleep 6
          done
          echo "Erro: SQL Server não inicializou a tempo"
          exit 1

      - name: Criar banco de dados antes dos testes
        run: |
          /opt/mssql-tools/bin/sqlcmd -S localhost,1433 -U sa -P NovaSenhaForte123 -Q "CREATE DATABASE Contacts;"

      - name: Instalar dotnet-ef
        run: |
          dotnet tool install --global dotnet-ef
          export PATH="$HOME/.dotnet/tools:$PATH"
          echo "Verificando instalação do dotnet-ef..."
          dotnet tool list -g

      - name: Aplicar migrações do Entity Framework
        run: |
          dotnet ef database update --project TechChallenge.Infrastructure/TechChallenge.Infrastructure.csproj --context ContactDbContext --connection "Server=localhost,1433; Database=Contacts; User Id=sa; Password=NovaSenhaForte123; TrustServerCertificate=True"

      - name: Executar testes de integração
        env:
          ConnectionStrings__ConexaoPadrao: "Server=localhost,1433; Database=Contacts; User Id=sa; Password=NovaSenhaForte123; TrustServerCertificate=True"
        run: dotnet test TechChallenge.Application.IntegrationTests/TechChallenge.Application.IntegrationTests.csproj --configuration Debug --no-build --verbosity normal