name: CI - Build, Test, and Publish

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Instalar .NET 7
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Restaurar dependências
        run: dotnet restore

      - name: Build do projeto
        run: dotnet build --configuration Release --no-restore

  unit_tests:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Instalar .NET 7
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Restaurar dependências
        run: dotnet restore

      - name: Executar testes unitários
        run: dotnet test --configuration Release --no-restore --filter "Category=Unit"

  integration_tests:
    needs: build
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          SA_PASSWORD: "SenhaSegura@1234"
          ACCEPT_EULA: "Y"
          MSSQL_PID: "Developer"
        ports:
          - 1433:1433
        options: >-
          --health-cmd "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P SenhaSegura@1234 -Q 'SELECT 1' || exit 1"
          --health-interval 15s
          --health-timeout 10s
          --health-retries 20
          --memory="3g"
          --cpus="2"

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Instalar .NET 7
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Restaurar dependências
        run: dotnet restore

      - name: Aguardar SQL Server iniciar
        run: |
          echo "Esperando SQL Server iniciar..."
          for i in {1..20}; do
            if /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P SenhaSegura@1234 -Q "SELECT 1" &> /dev/null; then
              echo "SQL Server está pronto"
              exit 0
            fi
            echo "SQL Server ainda não está pronto... Tentativa $i de 20"
            sleep 15
          done
          echo "Erro: SQL Server não inicializou a tempo"
          exit 1

      - name: Executar testes de integração
        run: dotnet test --configuration Release --no-restore --filter "Category=Integration"

  docker:
    needs: [unit_tests, integration_tests]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build da imagem Docker
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/meu-microsservico:latest .

      - name: Enviar imagem para Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/meu-microsservico:latest
